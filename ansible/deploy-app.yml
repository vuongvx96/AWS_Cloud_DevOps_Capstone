- name: "Deploy latest app"
  hosts: management[0]
  user: ubuntu
  gather_facts: false
  become: yes
  vars:
    DOCKER_IMAGE_NAME: "{{ lookup('env', 'DOCKER_IMAGE_NAME') }}"
    ENVIRONMENT_NAME: "{{ lookup('env', 'ENVIRONMENT_NAME') }}"
    CIRCLE_WORKFLOW_ID: "{{ lookup('env', 'CIRCLE_WORKFLOW_ID') }}"
    DB_HOST: "{{ lookup('env','DB_HOST') }}"
    DB_USERNAME: "{{ lookup('env','DB_USERNAME') }}"
    DB_PASSWORD: "{{ lookup('env','DB_PASSWORD') }}"
    DB_NAME: "{{ lookup('env','DB_NAME') }}"
    IDENTITY_DB_NAME: "{{ lookup('env','IDENTITY_DB_NAME') }}"
    DB_PORT: "{{ lookup('env','DB_PORT') }}"
    EMAIL_FROMADDRESS: "{{ lookup('env','EMAIL_FROMADDRESS') }}"
    EMAIL_APIKEY: "{{ lookup('env','EMAIL_APIKEY') }}"
    EMAIL_FROMNAME: "{{ lookup('env','EMAIL_FROMNAME') }}"
    JWT_SECRECT_KEY: "{{ lookup('env','JWT_SECRECT_KEY') }}"
    JWT_ISSUER: "{{ lookup('env','JWT_ISSUER') }}"
    JWT_AUDIENCE: "{{ lookup('env','JWT_AUDIENCE') }}"
    JWT_EXPIRE_TIME: "{{ lookup('env','JWT_EXPIRE_TIME') }}"
  tasks:
    - name: ensure python3 is installed
      become: yes
      ansible.builtin.package:
        name:
          - python3
          - python3-pip
        state: present

    - name: install kubernetes pip package
      pip:
        name: kubernetes
        state: present

    - name: Set appsettings variable
      set_fact:
        appsettings:
          ConnectionStrings:
            GloboTicketTicketManagementConnectionString: "server={{ DB_HOST }};port={{ DB_PORT }};user={{ DB_USERNAME }};password={{ DB_PASSWORD }};Database={{ DB_NAME }}"
            GloboTicketIdentityConnectionString: "server={{ DB_HOST }};port={{ DB_PORT }};user={{ DB_USERNAME }};password={{ DB_PASSWORD }};Database={{ IDENTITY_DB_NAME }};"
          AllowedHosts: "*"
          EmailSettings:
            FromAddress: "{{ EMAIL_FROMADDRESS }}"
            ApiKey: "{{ EMAIL_APIKEY }}"
            FromName: "{{ EMAIL_FROMNAME }}"
          JwtSettings:
            Key: "{{ JWT_SECRECT_KEY }}"
            Issuer: "{{ JWT_ISSUER }}"
            Audience: "{{ JWT_AUDIENCE }}"
            DurationInMinutes: "{{ JWT_EXPIRE_TIME }}"

    - name: Create a k8s namespace
      kubernetes.core.k8s:
        name: globoticket-api
        api_version: v1
        kind: Namespace
        state: present

    - name: Create configmap using server side apply
      kubernetes.core.k8s:
        namespace: globoticket-api
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: globoticket-api-config
          data:
            appsettings.k8s.json: "{{ appsettings }}"
        apply: yes
        server_side_apply:
          field_manager: ansible

    - name: Update the deployment to run the latest Build
      shell: "./bin/kubectl set image deployments/{{ ENVIRONMENT_NAME }}-deployment {{ ENVIRONMENT_NAME }}-app=vuongvx/{{ DOCKER_IMAGE_NAME }}:{{ CIRCLE_WORKFLOW_ID }}"
      args:
        chdir: $HOME

    - name: Check if deployment ist successful
      shell: "./bin/kubectl rollout status deployments/{{ ENVIRONMENT_NAME }}-deployment"
      args:
        chdir: $HOME
